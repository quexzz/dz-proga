#include <iostream>  // Подключаю библиотеку для работы с вводом-выводом
#include <deque>     // Подключаю библиотеку для работы с деком

int main() {
    std::deque<int> queue;  // Создаю дек для хранения элементов очереди
    int n, element;         // Объявляю переменные для количества элементов и текущего элемента

    // Спрашиваю у пользователя количество элементов в очереди
    std::cout << "Введите количество элементов в очереди: ";
    std::cin >> n;  // Считываю количество элементов

    // Спрашиваю у пользователя элементы очереди
    std::cout << "Введите элементы очереди: ";
    for (int i = 0; i < n; ++i) {  // Цикл для ввода элементов
        std::cin >> element;  // Считываю элемент
        queue.push_back(element);  // Добавляю элемент в конец очереди
    }

    // Вывожу очередь до сдвига
    std::cout << "До сдвига: ";
    for (int num : queue) {  // Цикл для вывода элементов
        std::cout << num << " ";  // Вывожу текущий элемент
    }
    std::cout << std::endl;  // Перевожу строку

    // Нахожу первый максимальный элемент и его индекс вручную
    int maxElement = queue[0];  // Предполагаю, что первый элемент - максимальный
    int maxIndex = 0;  // Индекс первого элемента - 0
    for (int i = 1; i < queue.size(); ++i) {  // Прохожу по всем элементам очереди
        if (queue[i] > maxElement) {  // Если нахожу элемент больше текущего максимума
            maxElement = queue[i];  // Обновляю максимальный элемент
            maxIndex = i;  // Обновляю индекс максимального элемента
        }
    }

    // Выполняю циклический сдвиг вручную
    std::deque<int> shiftedQueue;  // Создаю новый дек для хранения сдвинутой очереди
    for (int i = maxIndex; i < queue.size(); ++i) {  // Добавляю элементы от максимального до конца
        shiftedQueue.push_back(queue[i]);  // Добавляю элемент в новый дек
    }
    for (int i = 0; i < maxIndex; ++i) {  // Добавляю элементы от начала до максимального
        shiftedQueue.push_back(queue[i]);  // Добавляю элемент в новый дек
    }

    // Вывожу очередь после сдвига
    std::cout << "После сдвига: ";
    for (int num : shiftedQueue) {  // Цикл для вывода элементов
        std::cout << num << " ";  // Вывожу текущий элемент
    }
    std::cout << std::endl;  // Перевожу строку

    return 0;  // Завершаю программу
}
